/**
 * Autogenerated by Thrift for if/KeyValue.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */

#include "if/gen-cpp2/KeyValue_data.h"
#include "if/gen-cpp2/KeyValue_constants.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache::thrift {

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::kv::PutRequest>::name = "PutRequest";
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::kv::PutRequest>::fields_names = { {
  "key"sv,
  "value"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 2> TStructDataStorage<::kv::PutRequest>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 2> TStructDataStorage<::kv::PutRequest>::fields_types = { {
  TType::T_STRING,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 2> TStructDataStorage<::kv::PutRequest>::isset_indexes = { {
  0,
  1,
}};

THRIFT_DATA_MEMBER const std::string_view TStructDataStorage<::kv::GetResponse>::name = "GetResponse";
THRIFT_DATA_MEMBER const std::array<std::string_view, 2> TStructDataStorage<::kv::GetResponse>::fields_names = { {
  "found"sv,
  "value"sv,
}};
THRIFT_DATA_MEMBER const std::array<int16_t, 2> TStructDataStorage<::kv::GetResponse>::fields_ids = { {
  1,
  2,
}};
THRIFT_DATA_MEMBER const std::array<protocol::TType, 2> TStructDataStorage<::kv::GetResponse>::fields_types = { {
  TType::T_BOOL,
  TType::T_STRING,
}};
THRIFT_DATA_MEMBER const std::array<int, 2> TStructDataStorage<::kv::GetResponse>::isset_indexes = { {
  0,
  1,
}};

namespace detail {

::folly::Range<const ::std::string_view*>(*TSchemaAssociation<::kv::PutRequest, false>::bundle)() =
    nullptr;

::folly::Range<const ::std::string_view*>(*TSchemaAssociation<::kv::GetResponse, false>::bundle)() =
    nullptr;

} // namespace detail
} // namespace apache::thrift
